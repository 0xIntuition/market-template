import { parseAbi } from 'viem'

export const MULTIVAULT_ABI = parseAbi([
  'function createAtom(bytes atomUri) payable returns (uint256)',
  'function createTriple(uint256 subjectId, uint256 predicateId, uint256 objectId) payable returns (uint256)',
  'function getAtomCost() view returns (uint256)',
  'function getTripleCost() view returns (uint256)',
  'function atomsByHash(bytes32) view returns (uint256)',
  'function depositAtom(address receiver, uint256 id) payable returns (uint256)',
  'function depositAtomCurve(address receiver, uint256 id, uint256 curveId) payable returns (uint256)',
  'function previewDeposit(uint256 assets, uint256 id) view returns (uint256)',
  'function previewDepositCurve(uint256 assets, uint256 id, uint256 curveId) view returns (uint256)',
  'function previewRedeem(uint256 shares, uint256 id) view returns (uint256)',
  'function previewRedeemCurve(uint256 shares, uint256 id, uint256 curveId) view returns (uint256)',
  'function currentSharePrice(uint256 id) view returns (uint256)',
  'function currentSharePriceCurve(uint256 id, uint256 curveId) view returns (uint256)',
  'function getVaultStateForUser(uint256 vaultId, address receiver) view returns (uint256, uint256)',
  'function getVaultStateForUserCurve(uint256 vaultId, uint256 curveId, address receiver) view returns (uint256, uint256)',
  'function redeemAtom(uint256 shares, address receiver, uint256 id) returns (uint256)',
  'function redeemAtomCurve(uint256 shares, address receiver, uint256 atomId, uint256 curveId) returns (uint256)',
  'function vaults(uint256) view returns (uint256 totalAssets, uint256 totalShares)',
  'function getCurveVaultState(uint256 termId, uint256 curveId) view returns (uint256, uint256)',
  'function approveSender(address sender)',
  'function bondingCurveConfig() view returns (address, uint256)',
  'error EthMultiVault_AdminOnly()',
  'error EthMultiVault_ArraysNotSameLength()',
  'error EthMultiVault_AtomDoesNotExist(uint256 atomId)',
  'error EthMultiVault_AtomExists(bytes atomUri)',
  'error EthMultiVault_AtomUriTooLong()',
  'error EthMultiVault_BurnFromZeroAddress()',
  'error EthMultiVault_BurnInsufficientBalance()',
  'error EthMultiVault_CannotApproveSelf()',
  'error EthMultiVault_CannotRevokeSelf()',
  'error EthMultiVault_DeployAccountFailed()',
  'error EthMultiVault_DepositOrWithdrawZeroShares()',
  'error EthMultiVault_DepositExceedsMaxAssets()',
  'error EthMultiVault_HasCounterStake()',
  'error EthMultiVault_InsufficientBalance()',
  'error EthMultiVault_InsufficientDepositAmountToCoverFees()',
  'error EthMultiVault_InsufficientRemainingSharesInVault(uint256 remainingShares)',
  'error EthMultiVault_InsufficientSharesInVault()',
  'error EthMultiVault_InvalidTotalAtomDepositsForTriple()',
  'error EthMultiVault_InvalidEntryFee()',
  'error EthMultiVault_InvalidExitFee()',
  'error EthMultiVault_InvalidProtocolFee()',
  'error EthMultiVault_MinimumDeposit()',
  'error EthMultiVault_OperationAlreadyExecuted()',
  'error EthMultiVault_OperationAlreadyScheduled()',
  'error EthMultiVault_OperationNotScheduled()',
  'error EthMultiVault_ReceiveNotAllowed()',
  'error EthMultiVault_SenderAlreadyApproved()',
  'error EthMultiVault_SenderNotApproved()',
  'error EthMultiVault_TimelockNotExpired()',
  'error EthMultiVault_TransferFailed()',
  'error EthMultiVault_TripleExists(uint256 subjectId, uint256 predicateId, uint256 objectId)',
  'error EthMultiVault_VaultDoesNotExist()',
  'error EthMultiVault_VaultIsTriple(uint256 vaultId)',
  'error EthMultiVault_VaultNotAtom()',
  'error EthMultiVault_VaultNotTriple()'
])

export const BONDING_CURVE_REGISTRY_ABI = parseAbi([
  'function previewDeposit(uint256 assets, uint256 totalAssets, uint256 totalShares, uint256 id) view returns (uint256 shares)',
  'function previewRedeem(uint256 shares, uint256 totalShares, uint256 totalAssets, uint256 id) view returns (uint256 assets)',
  'function previewWithdraw(uint256 assets, uint256 totalAssets, uint256 totalShares, uint256 id) view returns (uint256 shares)',
  'function previewMint(uint256 shares, uint256 totalShares, uint256 totalAssets, uint256 id) view returns (uint256 assets)',
  'function convertToShares(uint256 assets, uint256 totalAssets, uint256 totalShares, uint256 id) view returns (uint256 shares)',
  'function convertToAssets(uint256 shares, uint256 totalShares, uint256 totalAssets, uint256 id) view returns (uint256 assets)',
  'function currentPrice(uint256 totalShares, uint256 id) view returns (uint256 sharePrice)',
  'function getCurveName(uint256 id) view returns (string)',
  'function getCurveMaxShares(uint256 id) view returns (uint256)',
  'function getCurveMaxAssets(uint256 id) view returns (uint256)',
  'function count() view returns (uint256)',
  'function curveAddresses(uint256 id) view returns (address)',
  'function curveIds(address curve) view returns (uint256)'
])